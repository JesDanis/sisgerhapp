{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { StyleDefinition } from '../style-definition';\n/**\n * Class to create a list definition\n */\n\nvar List =\n/** @class */\nfunction (_super) {\n  __extends(List, _super);\n\n  function List() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * It applies a type marker\n   * @param type The type of marker\n   */\n\n\n  List.prototype.type = function (type) {\n    this.content.type = type;\n    return this;\n  };\n  /**\n   * It sets a color to the marker\n   * @param color The color\n   */\n\n\n  List.prototype.markerColor = function (color) {\n    this.content.markerColor = color;\n    return this;\n  };\n\n  return List;\n}(StyleDefinition);\n\nexport { List }; //# sourceMappingURL=list.js.map","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * Abstract class that defines the common properties of a vector\n */\nvar Vector =\n/** @class */\nfunction () {\n  /**\n   * @param type Vector type\n   */\n  function Vector(type) {\n    this.content = {};\n    this.content.type = type;\n  }\n\n  Object.defineProperty(Vector.prototype, \"end\", {\n    /**\n     * @returns  the built content\n     */\n    get: function () {\n      return this.content;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Sets a color to the vector\n   * @param color The color\n   * @returns T\n   */\n\n  Vector.prototype.color = function (color) {\n    this.content.color = color;\n    return this;\n  };\n  /**\n   * Sets a color to the line\n   * @param lineColor the color\n   * @returns T\n   */\n\n\n  Vector.prototype.lineColor = function (lineColor) {\n    this.content.lineColor = lineColor;\n    return this;\n  };\n  /**\n   * Sets the width of the line\n   * @param lineWidth the width\n   * @returns T\n   */\n\n\n  Vector.prototype.lineWidth = function (lineWidth) {\n    this.content.lineWidth = lineWidth;\n    return this;\n  };\n  /**\n   * Defines the boder type of a line\n   * @param type 'round' | 'square'\n   * @returns T\n   */\n\n\n  Vector.prototype.lineCap = function (type) {\n    this.content.lineCap = type;\n    return this;\n  };\n  /**\n   * Sets opacity to the vector\n   * @param fillOpacity the number of opacity\n   * @returns T\n   */\n\n\n  Vector.prototype.fillOpacity = function (fillOpacity) {\n    this.content.fillOpacity = fillOpacity;\n    return this;\n  };\n  /**\n   * Sets a linear gradient to the vector\n   * @param linearGradient an array of given colors\n   * @returns T\n   */\n\n\n  Vector.prototype.linearGradient = function (linearGradient) {\n    this.content.linearGradient = linearGradient;\n    return this;\n  };\n  /**\n   * Sets a dash on the line of the vector\n   * @param length The length of the dash\n   * @returns T\n   */\n\n\n  Vector.prototype.dash = function (length) {\n    this.content.dash = {\n      length: length\n    };\n    return this;\n  };\n\n  return Vector;\n}();\n\nexport { Vector }; //# sourceMappingURL=vector.js.map","map":null,"metadata":{},"sourceType":"module"}
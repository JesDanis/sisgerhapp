{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ContentDefinition } from './content-definition';\n/**\n * Class that contains the global style definitions\n */\n\nvar StyleDefinition =\n/** @class */\nfunction (_super) {\n  __extends(StyleDefinition, _super);\n\n  function StyleDefinition() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Set the fontSize\n   * @param size Size\n   */\n\n\n  StyleDefinition.prototype.fontSize = function (size) {\n    this.content.fontSize = size;\n    return this;\n  };\n  /**\n   * Sets the width. If a string is passed it allows\n   * '*', 'auto', '<1-100>%'\n   * @param size Size\n   */\n\n\n  StyleDefinition.prototype.width = function (size) {\n    this.content.width = size;\n    return this;\n  };\n  /**\n   * Sets the height. if a string is passed it allows\n   * '*', 'auto', '<1-100>%'\n   * @param size Size\n   */\n\n\n  StyleDefinition.prototype.height = function (size) {\n    this.content.height = size;\n    return this;\n  };\n  /**\n   * Set the alignment\n   * @param align The alignment\n   */\n\n\n  StyleDefinition.prototype.alignment = function (align) {\n    this.content.alignment = align;\n    return this;\n  };\n  /**\n   * Set bold text\n   */\n\n\n  StyleDefinition.prototype.bold = function () {\n    this.content.bold = true;\n    return this;\n  };\n  /**\n   * Set italics text\n   */\n\n\n  StyleDefinition.prototype.italics = function () {\n    this.content.italics = true;\n    return this;\n  };\n  /**\n   * Set a margin\n   * @param margin Margins\n   */\n\n\n  StyleDefinition.prototype.margin = function (margin) {\n    this.content.margin = margin;\n    return this;\n  };\n  /**\n   * Set a style\n   */\n\n\n  StyleDefinition.prototype.style = function (style) {\n    this.content.style = style;\n    return this;\n  };\n  /**\n   * Set a color\n   */\n\n\n  StyleDefinition.prototype.color = function (color) {\n    this.content.color = color;\n    return this;\n  };\n  /**\n   * Set a background\n   */\n\n\n  StyleDefinition.prototype.background = function (background) {\n    this.content.background = background;\n    return this;\n  };\n  /**\n   * Set a link\n   */\n\n\n  StyleDefinition.prototype.link = function (link) {\n    this.content.link = link;\n    return this;\n  };\n  /**\n   * Set a link to any page\n   */\n\n\n  StyleDefinition.prototype.linkToPage = function (page) {\n    this.content.linkToPage = page;\n    return this;\n  };\n  /**\n   * Set noWrap\n   */\n\n\n  StyleDefinition.prototype.noWrap = function () {\n    this.content.noWrap = true;\n    return this;\n  };\n  /**\n   * Set decoration\n   */\n\n\n  StyleDefinition.prototype.decoration = function (decoration) {\n    this.content.decoration = decoration;\n    return this;\n  };\n  /**\n   * Set decorationStyle\n   */\n\n\n  StyleDefinition.prototype.decorationStyle = function (decorationStyle) {\n    this.content.decorationStyle = decorationStyle;\n    return this;\n  };\n  /**\n   * Set decorationColor\n   */\n\n\n  StyleDefinition.prototype.decorationColor = function (decorationColor) {\n    this.content.decorationColor = decorationColor;\n    return this;\n  };\n  /**\n   * Set fontFeatures\n   */\n\n\n  StyleDefinition.prototype.fontFeatures = function (fontFeatures) {\n    this.content.fontFeatures = fontFeatures;\n    return this;\n  };\n  /**\n   * Set a specific font to a text\n   * @param fontName The key of the font name\n   */\n\n\n  StyleDefinition.prototype.font = function (fontName) {\n    this.content.font = fontName;\n    return this;\n  };\n  /**\n   * Sets the content in an absolute position\n   * @param x coord X\n   * @param y coord Y\n   */\n\n\n  StyleDefinition.prototype.absolutePosition = function (x, y) {\n    this.content.absolutePosition = {\n      x: x,\n      y: y\n    };\n    return this;\n  };\n  /**\n   * Sets the content in an relative position\n   * @param x coord X\n   * @param y coord Y\n   */\n\n\n  StyleDefinition.prototype.relativePosition = function (x, y) {\n    this.content.relativePosition = {\n      x: x,\n      y: y\n    };\n    return this;\n  };\n  /**\n   * Sets the line height, default 1 accroding to [PDFMake documentations](https://pdfmake.github.io/docs/0.1/document-definition-object/styling/#style-properties)\n   * @param height number\n   */\n\n\n  StyleDefinition.prototype.lineHeight = function (height) {\n    this.content.lineHeight = height;\n    return this;\n  };\n  /**\n   * Sets size of the letter spacing in pt\n   * @param spacing\n   */\n\n\n  StyleDefinition.prototype.characterSpacing = function (spacing) {\n    this.content.characterSpacing = spacing;\n    return this;\n  };\n\n  return StyleDefinition;\n}(ContentDefinition);\n\nexport { StyleDefinition }; //# sourceMappingURL=style-definition.js.map","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { List } from './list';\n/**\n * Class to create an ordered list definition\n */\n\nvar Ol =\n/** @class */\nfunction (_super) {\n  __extends(Ol, _super);\n  /**\n   * @param items Items to print\n   */\n\n\n  function Ol(_items) {\n    var _this = _super.call(this) || this;\n\n    _this._items = _items;\n    _this.content.ol = _this._items;\n    return _this;\n  }\n  /**\n   * It applies a type marker\n   * @param type ( lower-alpha, upper-alpha, upper-roman, lower-roman, none )\n   */\n\n\n  Ol.prototype.type = function (type) {\n    return _super.prototype.type.call(this, type);\n  };\n  /**\n   * Orden the list descendent\n   */\n\n\n  Ol.prototype.reversed = function () {\n    this.content.reversed = true;\n    return this;\n  };\n  /**\n   * It sets a separator\n   * @param separator Type of the separator\n   */\n\n\n  Ol.prototype.separator = function (separator) {\n    this.content.separator = separator;\n    return this;\n  };\n  /**\n   * It sets the number to start the list\n   * @param start number to start\n   */\n\n\n  Ol.prototype.start = function (start) {\n    this.content.start = start;\n    return this;\n  };\n\n  return Ol;\n}(List);\n\nexport { Ol }; //# sourceMappingURL=ordered-list.js.map","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { StyleDefinition } from './style-definition';\nimport { isBase64 } from '../utils/is-base64';\n/**\n * Class to create an image definition\n */\n\nvar Img =\n/** @class */\nfunction (_super) {\n  __extends(Img, _super);\n  /**\n   * @param url Image URL or BASE64\n   * @param fromDefinition It defines if the image is from definition \"images\" property\n   */\n\n\n  function Img(url, fromDefinition) {\n    if (fromDefinition === void 0) {\n      fromDefinition = false;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.url = url;\n    _this.fromDefinition = fromDefinition;\n    return _this;\n  }\n  /**\n   * It gets the content with the image in base64\n   */\n\n\n  Img.prototype.build = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toBase64()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * It fits the image\n   * @param fit {[ number, number ]}\n   */\n\n\n  Img.prototype.fit = function (fit) {\n    this.content.fit = fit;\n    return this;\n  };\n  /**\n   * It adds opacity to the image\n   * @param opacity 0 to 1\n   */\n\n\n  Img.prototype.opacity = function (opacity) {\n    if (opacity > 1) opacity = 1;\n    this.content.opacity = opacity;\n    return this;\n  };\n  /**\n   * It converts a image URL to Base64 and set the image\n   */\n\n\n  Img.prototype.toBase64 = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, e_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!(isBase64(this.url) || this.fromDefinition)) return [3\n            /*break*/\n            , 1];\n            this.content.image = this.url;\n            return [2\n            /*return*/\n            , Promise.resolve(this.content)];\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            _a = this.content;\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              var img = new Image();\n              img.crossOrigin = 'Anonymous';\n\n              img.onload = function () {\n                var canvas = document.createElement('canvas');\n                var context = canvas.getContext('2d');\n                canvas.width = img.width;\n                canvas.height = img.height;\n                context.drawImage(img, 0, 0);\n                resolve(canvas.toDataURL(\"image/png\"));\n              };\n\n              img.onerror = reject;\n              img.src = _this.url;\n            })];\n\n          case 2:\n            _a.image = _b.sent();\n            return [2\n            /*return*/\n            , Promise.resolve(this.content)];\n\n          case 3:\n            e_1 = _b.sent();\n            throw new Error(\"The \" + this.url + \" can't be resolved\");\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return Img;\n}(StyleDefinition);\n\nexport { Img }; //# sourceMappingURL=image.js.map","map":null,"metadata":{},"sourceType":"module"}